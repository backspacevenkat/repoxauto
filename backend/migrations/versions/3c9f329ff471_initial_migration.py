"""initial migration

Revision ID: 3c9f329ff471
Revises: 
Create Date: 2024-12-19 09:42:53.395547

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic
revision = '3c9f329ff471'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_no', sa.String(), nullable=True),
    sa.Column('act_type', sa.String(), nullable=True),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('email_password', sa.String(), nullable=True),
    sa.Column('auth_token', sa.Text(), nullable=True),
    sa.Column('ct0', sa.Text(), nullable=True),
    sa.Column('two_fa', sa.Text(), nullable=True),
    sa.Column('proxy_url', sa.String(), nullable=True),
    sa.Column('proxy_port', sa.String(), nullable=True),
    sa.Column('proxy_username', sa.String(), nullable=True),
    sa.Column('proxy_password', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('consumer_key', sa.Text(), nullable=True),
    sa.Column('consumer_secret', sa.Text(), nullable=True),
    sa.Column('bearer_token', sa.Text(), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('access_token_secret', sa.Text(), nullable=True),
    sa.Column('client_id', sa.Text(), nullable=True),
    sa.Column('client_secret', sa.Text(), nullable=True),
    sa.Column('language_status', sa.Text(), nullable=True),
    sa.Column('developer_status', sa.Text(), nullable=True),
    sa.Column('unlock_status', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_validation_time', sa.DateTime(), nullable=True),
    sa.Column('last_task_time', sa.DateTime(), nullable=True),
    sa.Column('total_tasks_completed', sa.Integer(), nullable=True),
    sa.Column('total_tasks_failed', sa.Integer(), nullable=True),
    sa.Column('current_15min_requests', sa.Integer(), nullable=True),
    sa.Column('current_24h_requests', sa.Integer(), nullable=True),
    sa.Column('last_rate_limit_reset', sa.DateTime(), nullable=True),
    sa.Column('validation_in_progress', sa.Enum('PENDING', 'VALIDATING', 'RECOVERING', 'COMPLETED', 'FAILED', name='validationstate'), nullable=True),
    sa.Column('last_validation', sa.Text(), nullable=True),
    sa.Column('recovery_attempts', sa.Integer(), nullable=True),
    sa.Column('recovery_status', sa.Text(), nullable=True),
    sa.Column('last_recovery_time', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_accounts_account_no'), 'accounts', ['account_no'], unique=True)
    op.create_index(op.f('ix_accounts_id'), 'accounts', ['id'], unique=False)
    op.create_table('rate_limits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('endpoint', sa.String(), nullable=True),
    sa.Column('window', sa.String(), nullable=True),
    sa.Column('requests_count', sa.Integer(), nullable=True),
    sa.Column('reset_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rate_limits_account_id'), 'rate_limits', ['account_id'], unique=False)
    op.create_index(op.f('ix_rate_limits_endpoint'), 'rate_limits', ['endpoint'], unique=False)
    op.create_index(op.f('ix_rate_limits_id'), 'rate_limits', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('input_params', sa.JSON(), nullable=False),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('worker_account_id', sa.Integer(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('execution_time', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['worker_account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_index(op.f('ix_tasks_status'), 'tasks', ['status'], unique=False)
    op.create_index(op.f('ix_tasks_type'), 'tasks', ['type'], unique=False)
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tasks_type'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_status'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_rate_limits_id'), table_name='rate_limits')
    op.drop_index(op.f('ix_rate_limits_endpoint'), table_name='rate_limits')
    op.drop_index(op.f('ix_rate_limits_account_id'), table_name='rate_limits')
    op.drop_table('rate_limits')
    op.drop_index(op.f('ix_accounts_id'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_account_no'), table_name='accounts')
    op.drop_table('accounts')
    # ### end Alembic commands ###